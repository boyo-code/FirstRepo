1--4---create booking

CREATE PROCEDURE AddBooking
    @Booking_ID INT,
    @Client_ID INT,
    @Trainer_ID INT,
    @BookingDate DATE,
    @Duration TIME(7),
    @Price DECIMAL(10, 2),
    @Status NCHARVAR(20)

AS
BEGIN
    INSERT INTO Bookings (Booking_ID INT, Client_ID, Trainer_ID, BookingDate, Duration, Price,Status)
    VALUES (@Booking_ID, @Client_ID, @Trainer_ID, @BookingDate, @Duration, @Price,@Status);
END

usage
EXEC AddBooking @Client_ID = 1, @Trainer_ID = 3, @Date = '2024-10-01', @Duration = '2024-10-05', @Status = 'Confirm' , @Price = 60.00 ;

--EXEC AddBooking @Client_ID = 1, @Trainer_ID = 3, @Date = '2024-10-01', @Duration = '2024-10-05'@Status = 'Confirm' , @Price = 60.00;
------------------------------------------------------------------------

2------delete

CREATE PROCEDURE DeleteBooking
    @BookingID INT
AS
BEGIN
    DELETE FROM Booking
    WHERE Booking_ID = @BookingID;
END

--EXEC DeleteBooking @BookingID = 2;

----------------------------------------------------------------------------
3----get booking by client

CREATE PROCEDURE GetBookingsByClient
    @Client_ID INT
AS
BEGIN
    SELECT *
    FROM Booking
    WHERE Client_ID = @ClientID
    ORDER BY BookingDate DESC;
END

--EXEC GetBookingsByClient @ClientID = 1;

-----------------------------------------------------------------------------
4----- all booking

CREATE PROCEDURE GetAllBookings
AS
BEGIN
    SELECT *
    FROM Booking
    ORDER BY BookingDate DESC;
END
--EXEC GetAllBookings;

-----------------------------------------------------------------------------
5----- bookingby status

CREATE PROCEDURE GetBookingsByStatus
    @Status NVARCHAR(20)
AS
BEGIN
    SELECT *
    FROM Booking
    WHERE Status = @Status
    ORDER BY BookingDate DESC;
END
--EXEC GetBookingsByStatus @Status = 'Confirmed';

---------------------------------------------------------------
6-----total revenue
CREATE PROCEDURE GetTotalRevenue
AS
BEGIN
    SELECT SUM(Price) AS TotalRevenue
    FROM Booking
    WHERE Status = 'Confirmed';
END
--EXEC GetTotalRevenue;

------------------------------------------------------------------
7-------- summary
CREATE PROCEDURE GetBookingSummary
AS
BEGIN
    SELECT 
        COUNT(*) AS Price,
        COUNT(CASE WHEN Status = 'Confirmed' THEN 1 END) AS ConfirmedBookings,
        COUNT(CASE WHEN Status = 'Cancelled' THEN 1 END) AS CancelledBookings,
        SUM(Price) AS TotalRevenue
    FROM Bookings;
END

--EXEC GetBookingSummary;

